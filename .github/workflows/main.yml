name: Descargar y subir archivo de Google Drive

on:
  workflow_dispatch:
    inputs:
      google_drive_url:
        description: 'URL del archivo de Google Drive'
        required: true
        type: string

jobs:
  download_and_upload:
    runs-on: ubuntu-latest

    steps:
      - name: Revisar el código fuente
        uses: actions/checkout@v2

      - name: Configurar Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Instalar dependencias
        run: |
          python -m pip install --upgrade pip
          pip install requests

      - name: Descargar archivo de Google Drive
        run: |
          python -c "
import os
import requests

def convertir_a_link_directo(link):
    if 'drive.google.com' not in link:
        raise ValueError('El enlace proporcionado no es válido para Google Drive.')
    try:
        if 'id=' in link:
            file_id = link.split('id=')[1].split('&')[0]
        else:
            file_id = link.split('/d/')[1].split('/')[0]
        return f'https://drive.google.com/uc?export=download&id={file_id}'
    except IndexError:
        raise ValueError('El enlace proporcionado no tiene un formato válido.')

def obtener_nombre_archivo(link_directo):
    try:
        respuesta = requests.head(link_directo, allow_redirects=True)
        contenido_disposicion = respuesta.headers.get('content-disposition')
        if contenido_disposicion:
            nombre = contenido_disposicion.split('filename=')[-1].strip('\"')
            return nombre
        else:
            return 'archivo_descargado'
    except Exception as e:
        raise Exception(f'Error al obtener el nombre del archivo: {e}')

def descargar_archivo(link_directo, nombre_archivo):
    os.system(f'wget -O \"{nombre_archivo}\" \"{link_directo}\"')

link_google_drive = '${{ github.event.inputs.google_drive_url }}'
link_directo = convertir_a_link_directo(link_google_drive)
nombre_archivo = obtener_nombre_archivo(link_directo)
print(f'Descargando archivo como: {nombre_archivo}')
descargar_archivo(link_directo, nombre_archivo)
print('Descarga completada.')
"

      - name: Subir archivo como GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: '*'
          tag_name: ${{ github.run_id }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
